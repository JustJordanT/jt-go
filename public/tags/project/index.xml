<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project on </title>
    <link>//localhost:1313/tags/project/</link>
    <description>Recent content in Project on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Sep 2023 13:43:53 -0600</lastBuildDate>
    <atom:link href="//localhost:1313/tags/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>communication-go-aws-sns-sqs</title>
      <link>//localhost:1313/projects/communication-go-aws-sns-sqs/</link>
      <pubDate>Fri, 08 Sep 2023 13:43:53 -0600</pubDate>
      <guid>//localhost:1313/projects/communication-go-aws-sns-sqs/</guid>
      <description>Go AWS SNS/SQS Example Github Project Link&#xA;Overview This project demonstrates a minimal setup to use AWS SNS and SQS with Go. It includes examples for publishing messages to an SNS topic, subscribing an SQS queue to that topic, and consuming messages from the queue.&#xA;SQS Amazon Simple Queue Service (Amazon SQS) lets you send, store, and receive messages between software components at any volume, without losing messages or requiring other services to be available.</description>
    </item>
  </channel>
</rss>
